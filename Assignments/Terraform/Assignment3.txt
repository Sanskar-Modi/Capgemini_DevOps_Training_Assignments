Adding Maps and Lookups in your Terraform files
The lab files can be found @ https://github.com/satyensingh/terraform-assignment-resources.git
In the repo you will find main.tf, outputs.tf, and variables.tf.
Add a new variable called env. Set a description to “env: dev or prod”.
Convert the type from image_name to map.

Change the default to use key/value pairs. Set dev to ghost:latest and prod to ghost:alpine.

Convert container_name to a map. Change the default to use key/value pairs. Set dev to blog_dev and prod to blog_prod.

Convert ext_port to a map. Change the default to use key/value pairs. Set dev to 8080 and prod to 80.

Now initialize Terraform.

Setup the Development environment
Create a workspace called dev.
Generate a Terraform plan. Output the plan and call it tfdev_plan. Pass in a variable called env and set it to dev.
Apply tfdev_plan.

Setup the Production environment
Create a workspace called prod.
Generate a Terraform plan. Output the plan and call it tfprod_plan. Pass in a variable called env and set it to prod.
Apply tfprod_plan.

Verify both environments work
Open a browser and navigate to the public IP. This should pull up the production environment.
Open a browser tab and navigate to the public IP on port 8080. This should pull up the development environment.


-- 

Create main.tf file

Command : vi main.tf

provider "docker" {
  host = "tcp://192.168.207.131:4243"
}


resource "docker_image" "image_id" {
  name = "${lookup(var.image_name, var.env)}"
}

# Start the Container
resource "docker_container" "container_id" {
  name  = "${lookup(var.container_name, var.env)}"
  image = "${docker_image.image_id.latest}"
  ports {
    internal = "${var.int_port}"
    external = "${lookup(var.ext_port, var.env)}"
  }
}

Now, create variable.tf

Command : vi variable.tf 

variable "env" {
  description = "env: dev or prod"
}
variable "image_name" {
  type        = "map"
  description = "Image for container."
  default     = {
    dev  = "ghost:latest"
    prod = "ghost:alpine"
  }
}

variable "container_name" {
  type        = "map"
  description = "Name of the container."
  default     = {
    dev  = "blog_dev"
    prod = "blog_prod"
  }
}

variable "int_port" {
  description = "Internal port for container."
  default     = "2368"
}
variable "ext_port" {
  type        = "map"
  description = "External port for container."
  default     = {
    dev  = "8081"
    prod = "81"
  }
}

Now create output.tf

Command : vi output.tf

#Output the IP Address of the Container
output "ip_address" {
  value       = "${docker_container.container_id.ip_address}"
  description = "The IP for the container."
}

output "container_name" {
  value       = "${docker_container.container_id.name}"
  description = "The name of the container."
}


Now create dev workspace 

Command : terraform workspace dev

Now deploy the plan in dev workspace

Command : terraform plan -out tfdev_plan -var env=dev

Now apply the plan 

Command : terraform apply tfdev_plan

Now do the same for prod workspace. Create the prod workspace 

Command : terraform workspace prod

Now apply the plan 

Command : terraform plan -out tfprod_plan -var env=prod

Now apply the plan 

Command : terraform apply tfprod_plan
